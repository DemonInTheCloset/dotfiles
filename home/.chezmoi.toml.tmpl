{{- /* Ask for identity names */ -}}
{{- $config := (dict) -}}
{{- if hasKey . "identities" | not -}}
    {{- $map := set . "identities" (list) -}}
    {{- $num_ids := promptInt "How many identities do you want to add?" 1 | int -}}
    {{- range $ix := until $num_ids -}}
        {{- $_ := promptString "Identity Name" "personal" | trim | lower | append (get $map "identities") | set $map "identities" -}}
    {{- else -}}
        {{- fail "No identities setup" -}}
    {{- end -}}
    {{- $_ := get $map "identities" | set . "identities" -}}
{{- end -}}
{{- $_ := set $config "identities" .identities -}}

{{- /* Set up default GPG key */ -}}
{{- if hasKey . "default_gpg_key" | not -}}
    {{- $_ := promptString "Default GPG Key identifier" "name/email" | set . "default_gpg_key" -}}
{{- end -}}
{{- $_ := set $config "default_gpg_key" .default_gpg_key -}}

{{- /* Set up git identities */ -}}
{{- if hasKey . "gitids" | not -}}
    {{- $map := set . "gitids" (list) -}}
    {{- $num_ids := promptInt "How many git identities do you want to add?" 1 | int -}}
    {{- range $ix := until $num_ids -}}
        {{- $_ := promptString "Identity Name" "public" | trim | lower | append (get $map "gitids") | set $map "gitids" -}}
    {{- else -}}
        {{- fail "No identities setup" -}}
    {{- end -}}
    {{- $_ := get $map "gitids" | set . "gitids" -}}
{{- end -}}
{{- $_ := set $config "gitids" .gitids -}}

{{- /* Set up git configuration */ -}}
{{- if hasKey . "git_config" | not -}}
    {{- $_ := set $config "git_config" (dict) -}}
{{- else -}}
    {{- $_ := set $config "git_config" .git_config -}}
{{- end -}}

{{- /* Set up identities */ -}}
{{- if hasKey . "id" | not -}}
    {{- $_ := set . "id" (dict) -}}
{{- end -}}
{{- $data := .id -}}
{{- range $id := .identities -}}
    {{- if hasKey $data $id  | not -}}
        {{- $_ := set $data $id (dict) -}}
    {{- end -}}
    {{- $dict := get $data $id -}}

    {{- $key := "name" -}}
    {{- if hasKey $dict $key | not -}}
        {{- $_ := promptString (list $id $key | join " " | title) | set $dict $key -}}
    {{- end -}}
    {{- $key := "email" -}}
    {{- if hasKey $dict $key | not -}}
        {{- $_ := promptString (list $id $key | join " " | title) | set $dict $key -}}
    {{- end -}}
    {{- $key := "imapport" -}}
    {{- if hasKey $dict $key | not -}}
        {{- $_ := promptInt (list $id $key | join " " | title) 993 | set $dict $key -}}
    {{- end -}}
    {{- $key := "imapuser" -}}
    {{- if hasKey $dict $key | not -}}
        {{- $_ := promptString (list $id $key | join " " | title) (get $dict "email") | set $dict $key -}}
    {{- end -}}
    {{- $key := "imapserver" -}}
    {{- if hasKey $dict $key | not -}}
        {{- $_ := promptString (list $id $key | join " " | title) "imap.gmail.com" | set $dict $key -}}
    {{- end -}}
    {{- $key := "smtpport" -}}
    {{- if hasKey $dict $key | not -}}
        {{- $_ := promptInt (list $id $key | join " " | title) 587 | set $dict $key -}}
    {{- end -}}
    {{- $key := "smtpuser" -}}
    {{- if hasKey $dict $key | not -}}
        {{- $_ := promptString (list $id $key | join " " | title) (get $dict "email" | trimSuffix "@gmail.com") | set $dict $key -}}
    {{- end -}}
    {{- $key := "smtpserver" -}}
    {{- if hasKey $dict $key | not -}}
        {{- $_ := promptString (list $id $key | join " " | title) "smtp.gmail.com" | set $dict $key -}}
    {{- end -}}
    {{- if hasKey $dict "ssh_override" | not -}}
        {{- $_ = set $dict "ssh_override" (list) -}}
    {{- end -}}
    {{- if hasKey $dict "ssh_hosts" | not -}}
        {{- $_ = set $dict "ssh_hosts" (list) -}}
    {{- end -}}
{{- else -}}
    {{- fail "No Identities provided" -}}
{{- end }}
{{- $_ := set $config "id" .id -}}

{{- /* Set development variables */ -}}
{{- if hasKey . "dev" | not -}}
    {{- $_ := set . "dev" (dict) -}}
{{- end -}}
{{- if hasKey .dev "updatepkglists" | not -}}
    {{- $_ := set .dev "updatepkglists" false -}}
{{- end -}}
{{- if hasKey .dev "no_pkg_sync" | not -}}
    {{- $_ := set .dev "no_pkg_sync" false -}}
{{- end -}}

{{- /* Remove old entry names */ -}}
{{- $data := . -}}
{{- range $id := .identities }}
    {{- $old_key := list "ssh" $id "hosts" | join "_" -}}
    {{- if hasKey $data $old_key -}}
        {{- $_ := get $data $old_key | set (dig "id" $id (list) $config) "ssh_hosts" -}}
    {{- end -}}
{{- end -}}

# Chezmoi Config
[diff]
command = "delta"

# User Data
{{ $config | dict "data" | toToml }}
[data.dev]
# Automatically update pkglists when updating your system
# Only useful for developers, leave at default
# Default: false
updatepkglists = {{ .dev.updatepkglists | toToml }}

# Do not try to install packages if there are new available
# Leave at default unless you know what you are doing
# the config might randomly break otherwise
# Default: false
no_pkg_sync = {{ .dev.no_pkg_sync | toToml }}
